name: "Build Android App"

on:
  workflow_dispatch:
  
jobs:
  store_deploy_android:
    # Only run this job if the branch name starts with 'release/'
   # if:  startsWith(github.head_ref, 'release/')
    name: android store release
    runs-on: ubuntu-latest
    env:
      # Setup env variables that will be used throughout the workflow
      JAVA_VERSION: 12.0
      FLUTTER_VERSION: 3.19.0
      AAB_PATH: build/app/outputs/bundle/release/app-release.aab
      KEYSTORE_PATH: android/keystore_valoralysis.jks
      KEY_PROPS_PATH: android/key.properties
      SERVICE_ACCOUNT_PATH: store_credentials.json
    steps:
      # Checkout repository codebase
      - name: Checkout the code
        uses: actions/checkout@v3

      # Setup Java in the VM
      - name: Setup Java to compile the Android project
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: ${{ env.JAVA_VERSION }}
      
      # Setup Flutter in the VM
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}

      # Decode Android env variables
      - name: Decode Android keystore
        run: echo "${{ secrets.ANDROID_KEY }}" | base64 --decode > ${{ env.KEYSTORE_PATH }}

      - name: Decode Android key properties
        run: echo "${{ secrets.ANDROID_KEY_PROPERTIES }}" | base64 --decode > ${{ env.KEY_PROPS_PATH }}

      # Decode Android release Service Account
      - name: Decode Android Service Account
        run: echo "${{ secrets.ANDROID_SERVICE_ACCOUNT }}" | base64 --decode > ${{ env.SERVICE_ACCOUNT_PATH }}
        
      - name: create .env
        run: touch .env && echo "${{ secrets.RIOT_API_KEY }}" >> .env
        
      # Run flutter commands
      - name: Run flutter pub get
        run: flutter pub get

      - name: ðŸ“¦ Install dependencies
        run: flutter pub get

      # Build Android Bundle release file
      - name: Build aab
        run: |
          flutter build appbundle --debug



      # Deploy bundle to Google Play internal testing
      - name: Deploy to Play Store (Internal testing)
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.SERVICE_ACCOUNT_JSON }}
          packageName: com.melsayed.valoralysis
          releaseFiles: build/app/outputs/bundle/debug/app-debug.aab
          track: internal
